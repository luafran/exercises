##################################################
# file: NotificationService_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     /usr/bin/wsdl2py -b NotificationManagementService/NotificationService.wsdl
# 
##################################################

from NotificationService_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class NotificationServiceLocator:
    NS_address = "http://servicegateway.sym.cps.intel.com/NotificationManagementServiceSite/Service.svc"
    def getNSAddress(self):
        return NotificationServiceLocator.NS_address
    def getNS(self, url=None, **kw):
        return BasicHttpBinding_NotificationServiceSOAP(url or NotificationServiceLocator.NS_address, **kw)

# Methods
class BasicHttpBinding_NotificationServiceSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: GetMessages
    def GetMessages(self, request, **kw):
        if isinstance(request, NotificationService_GetMessages_InputMessage) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://Intel.ServicesManager/NotificationService/GetMessages", **kw)
        # no output wsaction
        response = self.binding.Receive(NotificationService_GetMessages_OutputMessage.typecode)
        return response

    # op: SendMessages
    def SendMessages(self, request, **kw):
        if isinstance(request, NotificationService_SendMessages_InputMessage) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://Intel.ServicesManager/NotificationService/SendMessages", **kw)
        # no output wsaction
        response = self.binding.Receive(NotificationService_SendMessages_OutputMessage.typecode)
        return response

    # op: SendMessageSync
    def SendMessageSync(self, request, **kw):
        if isinstance(request, NotificationService_SendMessageSync_InputMessage) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://Intel.ServicesManager/NotificationService/SendMessageSync", **kw)
        # no output wsaction
        response = self.binding.Receive(NotificationService_SendMessageSync_OutputMessage.typecode)
        return response

NotificationService_GetMessages_InputMessage = GED("http://Intel.ServicesManager", "GetMessages").pyclass

NotificationService_GetMessages_OutputMessage = GED("http://Intel.ServicesManager", "GetMessagesResponse").pyclass

NotificationService_SendMessages_InputMessage = GED("http://Intel.ServicesManager", "SendMessages").pyclass

NotificationService_SendMessages_OutputMessage = GED("http://Intel.ServicesManager", "SendMessagesResponse").pyclass

NotificationService_SendMessageSync_InputMessage = GED("http://Intel.ServicesManager", "SendMessageSync").pyclass

NotificationService_SendMessageSync_OutputMessage = GED("http://Intel.ServicesManager", "SendMessageSyncResponse").pyclass
